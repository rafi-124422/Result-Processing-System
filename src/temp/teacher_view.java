/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package temp;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
//import javafx.scene.input.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.CellEditorListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafi-iut
 */
public class teacher_view extends javax.swing.JFrame {

    /**
     * Creates new form teacher_view
     */
    String name,id;
    public teacher_view(String n, String i) throws SQLException {
       initComponents();
       teacher_input_mark_table.addMouseListener(new java.awt.event.MouseAdapter() {
   
    public void mouseClicked(java.awt.event.MouseEvent evt) {
       mark_submit.setEnabled(false);
    }
});
       mark_submit.setEnabled(false);
       show_gpa.setEnabled(false);
        name=n;
        id = i;
        teacher_name_label.setText("Name : "+name);
        teacher_id_label.setText  ("Id   : "+id);
        try
            {
           
            Class.forName("oracle.jdbc.OracleDriver");
            Connection con = null;
            try {
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","124422");
                Statement state = con.createStatement();
                String query= String.format("Select distinct Courseid from Course where CourseTeacherId='%s' order by courseid",id);
                //System.out.println(query);
                ResultSet result=state.executeQuery(query);
               // System.out.println("i");
                while(result.next())
                {
                   //System.out.println("i");
                   String c = result.getString("courseid");
                  
                   course_list_combo_box.addItem(c);
                    
                }
                result.close();
                
                
		} 
            catch (SQLException e) 
            {
			// TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(this,"error connect in query");
			e.printStackTrace();
            }       
        }
        catch(ClassNotFoundException e)
        {
             JOptionPane.showMessageDialog(this,"error ");
        }
            
            
        
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        teacher_id_label = new javax.swing.JLabel();
        teacher_name_label = new javax.swing.JLabel();
        select_your_course_lebel = new javax.swing.JLabel();
        course_list_combo_box = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        teacher_input_mark_table = new javax.swing.JTable();
        select_year_label = new javax.swing.JLabel();
        semester_year_combo_box = new javax.swing.JComboBox();
        course_year_submit_button = new javax.swing.JButton();
        show_gpa = new javax.swing.JButton();
        mark_submit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        teacher_view_menu = new javax.swing.JMenu();
        javax.swing.JMenuItem teacher_view_log_out = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(212, 172, 172));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMaximumSize(new java.awt.Dimension(900, 600));
        setPreferredSize(new java.awt.Dimension(1100, 705));
        setResizable(false);

        teacher_id_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        teacher_name_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        select_your_course_lebel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        select_your_course_lebel.setText("Select Your Course : ");

        course_list_combo_box.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        course_list_combo_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course_list_combo_boxActionPerformed(evt);
            }
        });

        teacher_input_mark_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        teacher_input_mark_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Attendence", "Quiz 1", "Quiz 2", "Quiz 3", "Quiz 4", "Mid Term", "Semester Final", "Total Mark", "GPA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teacher_input_mark_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        teacher_input_mark_table.setAutoscrolls(false);
        teacher_input_mark_table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        teacher_input_mark_table.setMinimumSize(new java.awt.Dimension(195, 0));
        teacher_input_mark_table.setOpaque(false);
        teacher_input_mark_table.setRowHeight(24);
        teacher_input_mark_table.setRowMargin(10);
        teacher_input_mark_table.setRowSelectionAllowed(false);
        teacher_input_mark_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(teacher_input_mark_table);
        teacher_input_mark_table.getAccessibleContext().setAccessibleDescription("");

        select_year_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        select_year_label.setText("Select Course Year : ");

        semester_year_combo_box.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        semester_year_combo_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semester_year_combo_boxActionPerformed(evt);
            }
        });

        course_year_submit_button.setText("show");
        course_year_submit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course_year_submit_buttonActionPerformed(evt);
            }
        });

        show_gpa.setText("Show GPA and Total Mark");
        show_gpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_gpaActionPerformed(evt);
            }
        });

        mark_submit.setText("Submit");
        mark_submit.setEnabled(false);
        mark_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mark_submitActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        teacher_view_menu.setText("File");

        teacher_view_log_out.setText("Log Out");
        teacher_view_log_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacher_view_log_outActionPerformed(evt);
            }
        });
        teacher_view_menu.add(teacher_view_log_out);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        teacher_view_menu.add(jMenuItem1);

        jMenuBar1.add(teacher_view_menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(show_gpa)
                                .addGap(18, 18, 18)
                                .addComponent(mark_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(select_your_course_lebel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(course_list_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(select_year_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(semester_year_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(course_year_submit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(teacher_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teacher_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(teacher_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teacher_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select_your_course_lebel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(course_list_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select_year_label, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semester_year_combo_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(course_year_submit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(show_gpa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mark_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");
        getAccessibleContext().setAccessibleParent(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void course_list_combo_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course_list_combo_boxActionPerformed
        // TODO add your handling code here:
        mark_submit.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel)teacher_input_mark_table.getModel(); 
        int rows = model.getRowCount(); 
        for(int i = rows - 1; i >=0; i--)
        {
           model.removeRow(i); 
        }
        show_gpa.setEnabled(false);
        semester_year_combo_box.removeAllItems();
        String coursename = (String) course_list_combo_box.getSelectedItem();
        try
            {
           
            Class.forName("oracle.jdbc.OracleDriver");
            Connection con = null;
            try {
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","124422");
                Statement state = con.createStatement();
                String query= String.format("Select semesteryear from Course where Courseid='%s' and courseteacherid='%s'",coursename,id);
               // System.out.println(query);
                ResultSet result=state.executeQuery(query);
               // System.out.println("i");
                String c;
                int year;
                while(result.next())
                {
                   // System.out.println("i");
                 
                   year = result.getInt("semesteryear");
                   //System.out.println(year);
                   semester_year_combo_box.addItem(year);
                }
                result.close();
           
		} 
            catch (SQLException e) 
            {
			// TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(this,"error connect in query");
			e.printStackTrace();
            }       
        }
        catch(ClassNotFoundException e)
        {
             JOptionPane.showMessageDialog(this,"error ");
        }
        
        
    }//GEN-LAST:event_course_list_combo_boxActionPerformed
   
    private void semester_year_combo_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semester_year_combo_boxActionPerformed
        // TODO add your handling code here:
        mark_submit.setEnabled(false);
        show_gpa.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel)teacher_input_mark_table.getModel(); 
        int rows = model.getRowCount(); 
        for(int i = rows - 1; i >=0; i--)
        {
           model.removeRow(i); 
        }
      
    }//GEN-LAST:event_semester_year_combo_boxActionPerformed

    @SuppressWarnings("empty-statement")
    private void course_year_submit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course_year_submit_buttonActionPerformed
        // TODO add your handling code here:
        mark_submit.setEnabled(false);
        show_gpa.setEnabled(true);
        course_list_combo_box.setEnabled(false);
        semester_year_combo_box.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel)teacher_input_mark_table.getModel(); 
        int rows = model.getRowCount(); 
            for(int i = rows - 1; i >=0; i--)
            {
                 model.removeRow(i); 
            }
  
           
        String courseid = (String) course_list_combo_box.getSelectedItem();
        int semester_year = (int) semester_year_combo_box.getSelectedItem();
        try
            {
           
            Class.forName("oracle.jdbc.OracleDriver");
            Connection con = null;
            try {
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","124422");
                Statement state = con.createStatement();
                String query= String.format("Select * from marks where Courseid='%s' and semesteryear=%d",courseid,semester_year);
               
                ResultSet result=state.executeQuery(query);
              
                String c=null;
                double at,q1,q2,q3,q4,mid,semFinal,total,gpa; 
             
                 while(result.next())
                {
               
                   c = result.getString("studentid");
                   at =  result.getDouble("att");
                   q1 = result.getDouble("quiz1");
                   q2 = result.getDouble("quiz2");
                   q3 = result.getDouble("quiz3");
                   q4 = result.getDouble("quiz4");
                   mid = result.getDouble("midterm");
                   semFinal = result.getDouble("semesterfinal");
                   total = result.getDouble("totalmark");
                   gpa = result.getDouble("gpa");
                   
                   model.addRow(new Object[]{c,at,q1,q2,q3,q4,mid,semFinal,total,gpa});
               
                }
                result.close();
           
		} 
            catch (SQLException e) 
            {
			// TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(this,"error connect in query");
			e.printStackTrace();
            }       
        }
        catch(ClassNotFoundException e)
        {
             JOptionPane.showMessageDialog(this,"error ");
        }
        
       
        int r = model.getRowCount(); 
        if(r==0)show_gpa.setEnabled(false);
        
    }//GEN-LAST:event_course_year_submit_buttonActionPerformed

    private void mark_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mark_submitActionPerformed
        // TODO add your handling code here:
        
        try
        {
           
            Class.forName("oracle.jdbc.OracleDriver");
            Connection con = null;
            try {
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","124422");
                Statement state = con.createStatement();
                int row = teacher_input_mark_table.getRowCount();
                int col = teacher_input_mark_table.getColumnCount();
                String courseid = (String) course_list_combo_box.getSelectedItem();
                int year = (int) semester_year_combo_box.getSelectedItem();
                String id;
                double at,q1,q2,q3,q4,mid,f,total,gpa;
                for(int i=0;i<row;i++)
                {
                id = (String) teacher_input_mark_table.getValueAt(i,0);
                at = (double) teacher_input_mark_table.getValueAt(i,1);
                q1 = (double) teacher_input_mark_table.getValueAt(i,2);
                q2 = (double) teacher_input_mark_table.getValueAt(i,3);
                q3 = (double) teacher_input_mark_table.getValueAt(i,4);
                q4 = (double) teacher_input_mark_table.getValueAt(i,5);
                mid = (double) teacher_input_mark_table.getValueAt(i,6);
                f = (double) teacher_input_mark_table.getValueAt(i,7);
                total = (double) teacher_input_mark_table.getValueAt(i,8);
                gpa = (double) teacher_input_mark_table.getValueAt(i,9);
        
                String query= String.format("update marks set att=%f,quiz1=%f,quiz2=%f,quiz3=%f,quiz4=%f,midterm=%f,semesterfinal=%f,totalmark=%f,gpa=%f where studentid='%s' and courseid='%s' and semesteryear=%d"
                        ,at,q1,q2,q3,q4,mid,f,total,gpa,id,courseid,year);
               
                ResultSet result=state.executeQuery(query);
               result.close();
		} 
            }
            catch (SQLException e) 
            {
			// TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(this,"error connect in query");
			e.printStackTrace();
            }       
        
        }
        catch(ClassNotFoundException e)
        {
             JOptionPane.showMessageDialog(this,"error ");
        }
            
        JOptionPane.showMessageDialog(this,"submitted");
       
        DefaultTableModel model = (DefaultTableModel)teacher_input_mark_table.getModel(); 
        int rows = model.getRowCount(); 
        for(int i = rows - 1; i >=0; i--)
        {
           model.removeRow(i); 
        }
        show_gpa.setEnabled(false);
        mark_submit.setEnabled(false);
        course_list_combo_box.setEnabled(true);
        semester_year_combo_box.setEnabled(true);
        
    }//GEN-LAST:event_mark_submitActionPerformed

    private void show_gpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_gpaActionPerformed
        // TODO add your handling code here:
        if(teacher_input_mark_table.isEditing()) JOptionPane.showMessageDialog(this,"after edit press enter");
        else{
        String courseid = (String) course_list_combo_box.getSelectedItem();
        int semester_year = (int) semester_year_combo_box.getSelectedItem();
        double credit = 0;
   
        try
            {
           
            Class.forName("oracle.jdbc.OracleDriver");
            Connection con = null;
            try {
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","124422");
                Statement state = con.createStatement();
                String query= String.format("Select credit from course where Courseid='%s' and semesteryear=%d",courseid,semester_year);
               // System.out.println(query);
              
                ResultSet result=state.executeQuery(query);
               // System.out.println("i");
              
                 while(result.next())
                {
                   // System.out.println("i");
                        credit = result.getDouble("credit");
                     
                }
                result.close();
           
		} 
            catch (SQLException e) 
            {
			// TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(this,"error connect in query");
			e.printStackTrace();
            }       
        }
        catch(ClassNotFoundException e)
        {
             JOptionPane.showMessageDialog(this,"error ");
        }
        DefaultTableModel model = (DefaultTableModel)teacher_input_mark_table.getModel(); 
       
        int rows = model.getRowCount(); 
       
        int col = model.getColumnCount();
        double t=0,gpa=0;
        double at=0,q1=0,q2=0,q3=0,q4=0,mid=0,f=0,temp=0,q=0,p=0;
       
        for(int i = 0; i <rows; i++)
            {
                     
                    if(model.getValueAt(i, 1)==null)at = 0;
                    else at = (double) model.getValueAt(i, 1);
                    if(model.getValueAt(i, 2)==null)q1 = 0;
                    else q1 = (double) model.getValueAt(i, 2);
                    if(model.getValueAt(i, 3)==null)q2 = 0;
                    else q2 = (double) model.getValueAt(i, 3);
                    if(model.getValueAt(i, 4)==null)q3 = 0;
                    else q3 = (double) model.getValueAt(i, 4);
                    if(model.getValueAt(i, 5)==null)q4 = 0;
                    else q4 = (double) model.getValueAt(i, 5);
                    if(model.getValueAt(i, 6)==null)mid = 0;
                    else mid = (double) model.getValueAt(i,6);
                    if(model.getValueAt(i, 7)==null)f = 0;
                    else f = (double) model.getValueAt(i, 7);
                    temp = Math.min(q4,Math.min(q3,Math.min(q1, q2)));
                    q = q1+q2+q3+q4-temp;
                    t = q+mid+f+at;
                   
                     model.setValueAt(t,i, 8);
                     p = t/credit;
                    
                     if(p>=80)gpa = 4.00;
                     else if(p>=75&&p<80)gpa=3.75;
                     else if(p>=70&&p<75)gpa=3.50;
                     else if(p>=65&&p<70)gpa=3.25;
                     else if(p>=60&&p<65)gpa=3.00;
                     else if(p>=55&&p<60)gpa=2.75;
                     else if(p>=50&&p<55)gpa=2.50;
                     else if(p>=45&&p<50)gpa=2.25;
                     else if(p>=40&&p<45)gpa=2.00;
                     else gpa = 0.00;
                     
                     model.setValueAt(gpa, i, 9);
               
                     
                     
             }
        mark_submit.setEnabled(true);
        }
        
           
        
    }//GEN-LAST:event_show_gpaActionPerformed

    private void teacher_view_log_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacher_view_log_outActionPerformed
        // TODO add your handling code here:
        dispose();
        new home().setVisible(true);
    }//GEN-LAST:event_teacher_view_log_outActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mark_submit.setEnabled(false);
        show_gpa.setEnabled(true);
        course_list_combo_box.setEnabled(true);
        semester_year_combo_box.setEnabled(true);
        DefaultTableModel model = (DefaultTableModel)teacher_input_mark_table.getModel(); 
        int rows = model.getRowCount(); 
            for(int i = rows - 1; i >=0; i--)
            {
                 model.removeRow(i); 
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teacher_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teacher_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teacher_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teacher_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new teacher_view("","").setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(teacher_view.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox course_list_combo_box;
    private javax.swing.JButton course_year_submit_button;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mark_submit;
    private javax.swing.JLabel select_year_label;
    private javax.swing.JLabel select_your_course_lebel;
    private javax.swing.JComboBox semester_year_combo_box;
    private javax.swing.JButton show_gpa;
    private javax.swing.JLabel teacher_id_label;
    private javax.swing.JTable teacher_input_mark_table;
    private javax.swing.JLabel teacher_name_label;
    private javax.swing.JMenu teacher_view_menu;
    // End of variables declaration//GEN-END:variables
}
